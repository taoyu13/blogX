const t={map:'[{"all":["1.0"],"chatgpt":["1.1"],"文档":["1.2"],"图像":["1.3"],"常用导航":["2.0"],"前端":["2.1"],"后端":["2.2"],"部署":["2.3"],"运维":["2.4"],"常用链接":["3.0","9.0","11.0","18.0"],"git":["4.0"],"linux":["5.0"],"斜体和粗体":["6.0"],"文字对齐":["6.1"],"超链接":["6.2"],"引用":["6.3"],"插入图像":["6.4"],"表格":["6.5"],"分割线":["6.6"],"代码":["6.7"],"正则表达式":["7.0"],"前言":["7.1"],"单个字符":["7.2"],"转义字符":["7.3"],"多个字符":["7.4"],"循环与重复":["7.5"],"位置与边界":["7.6"],"单词边界":["7.7"],"字符串边界":["7.8"],"应用与方法":["7.9"],"docker":["8.0"],"nginx":["10.0"],"前端资源导航":["12.0"],"info":["14.0"],"头像":["15.0"],"语录":["17.0"],"java":["19.0"],"关键技术":["19.1"],"springboot":["19.3"],"mybatis":["19.5","20.3"],"lombok":["19.7"],"框架思路":["19.8"],"database":["19.9"],"swagger":["19.10"],"bean":["19.11","20.2"],"aop":["19.12"],"基础扫盲":["20.0"],"注解":["20.1"],"一":["20.4"],"span":["20.5","20.7","20.10","20.12","20.14"],"常见注解":["20.6"],"详细教程":["20.8"],"二":["20.9"],"三":["20.11"],"教程":["20.13"],"插件安装与使用":["20.15"]},{"1":["14.0","20.6","20.10","20.13","20.16"],"2":["20.6","20.13","20.17"],"3":["20.18"],"4":["20.19"],"5":["20.20"],"14":["14.0"],"123":["18.0"],"2023":["14.0"],"in":["1.0"],"cardlist":["1.1","1.2","1.3","2.1","2.2","12.0"],"粗体":["6.0"],"居中对齐":["6.1"],"center":["6.1"],"行内式":["6.2","6.4"],"引用文字":["6.3"],"学号":["6.5"],"正则表达式在日常开发中的使用频率非常高":["7.1"],"对于单个字符":["7.2"],"当单个简单字符无法表达需要的意思时":["7.3"],"就要用到转义字符":["7.3"],"加在其前面":["7.3"],"使其意思发生变化":["7.3"],"若为":["7.3"],"单个字符的一对一匹配显然是不够的":["7.4"],"为了实现一对多的多字符匹配":["7.4"],"引入了":["7.4"],"集合区间":["7.4"],"和":["7.4","20.20"],"通配符":["7.4"],"的概念":["7.4"],"正则表达式中用中括号":["7.4"],"上述一对一和一对多的场景都是针对单个字符结果的":["7.5"],"若要匹配多个字符组成的结果":["7.5"],"就要用到重复与循环的方法":["7.5"],"在长文本字符串的处理中":["7.6"],"在英语句子中匹配某个单词时":["7.7"],"需要用到单词边界通配符":["7.7"],"元字符":["7.8"],"用来匹配字符串的开头":["7.8"],"而元字符":["7.8"],"用来匹配字符串的末尾":["7.8"],"在长文本中":["7.8"],"自动生成类的各种方法":["19.7"],"model":["19.9","20.8"],"切面":["19.12"],"特别鸣谢":["20.0"],"dto":["20.1"],"lombok":["20.3","20.15"],"基础名词":["20.4"],"id":["20.5","20.7","20.10","20.12","20.14"],"java":["20.6","20.13","20.15"],"注解":["20.6"],"annotation":["20.6"],"是一种特殊的语法结构":["20.6"],"它用于为":["20.6"],"简单来说":["20.8"],"面向业务":["20.8"],"我们是通过业务来定义":["20.8"],"的":["20.8"],"而":["20.8"],"springboot":["20.9"],"bean":["20.10"],"在":["20.10"],"spring":["20.10"],"boot":["20.10"],"中":["20.10"],"即":["20.10"],"类":["20.10"],"是一个重要的概念":["20.10"],"常用框架":["20.11"],"plus":["20.13"],"mybatis":["20.13"],"是一个用于":["20.13","20.15"],"平台的持久层框架":["20.13"],"它提供了一种简洁易用的方式来处理关系型数据库的数据操作":["20.13"],"可以将":["20.13"],"sql":["20.13"],"语句与":["20.13"],"代码分离":["20.13"],"getter":["20.16","20.20"],"setter":["20.16","20.20"],"这两个注解用于自动生成":["20.16"],"tostring":["20.17","20.20"],"此注解用于自动生成":["20.17","20.18"],"equalsandhashcode":["20.18","20.20"],"noargsconstructor":["20.19"],"allargsconstructor":["20.19"],"requiredargsconstructor":["20.19"],"这三个注解用于自动生成构造函数":["20.19"],"data":["20.20"],"这个注解是一个综合注解":["20.20"],"包括了":["20.20"]},{"1":["19.5"],"chatgpt":["1.0"],"文字":["6.0"],"markdown":["6.1"],"文字超链接文字":["6.2"],"图片alt":["6.4"],"姓名":["6.5"],"语言":["6.7"],"代码块":["6.7"],"熟练掌握正则表达式能够在开发中事半功倍":["7.1"],"就前端而言":["7.1"],"字符和正则表达式一般是一一对应的关系":["7.2"],"特殊字符":["7.3"],"在其前面加上转义字符":["7.3"],"后":["7.3"],"代表字符其本身":["7.3"],"失去特殊含义":["7.3"],"来表示集合的概念":["7.4"],"在集合中又有":["7.4"],"列举":["7.4"],"区间":["7.4"],"两种表达方式":["7.4"],"当需要匹配的字符不多时":["7.4"],"可以直接在集合中列举出来":["7.4"],"正则表达式中用若干元字符来表示不同的循环方式":["7.5"],"匹配规则":["7.5"],"元字符":["7.5"],"记忆方式":["7.5"],"我们经常要限制匹配的位置与边界":["7.6"],"b":["7.7"],"其中":["7.7"],"如果要排除换行符的干扰":["7.8"],"则要开启多行模式":["7.8"],"在正则表示式结尾添加":["7.8"],"m":["7.8"],"例如":["7.8"],"年":["14.0"],"要做一个做事有条理有计划":["14.0"],"头脑时刻保持清醒的技术人":["14.0"],"既然选择了技术这条路":["14.0"],"教程":["19.5"],"dao":["19.9"],"本部分内容由":["20.0"],"annotation":["20.5"],"代码提供额外的元数据信息":["20.6"],"注解不会直接影响程序的执行":["20.6"],"但它可以被其他工具":["20.6"],"框架或编译器读取并执行特定操作":["20.6"],"换句话说":["20.6"],"注解是一种给代码添加标记的方式":["20.6"],"这些标记可以被其他代码读取和处理":["20.6"],"注解的作用主要体现在以下几个方面":["20.6"],"dto":["20.7","20.8"],"是面向界面":["20.8"],"ui":["20.8"],"是通过":["20.8"],"的需求来定义的":["20.8"],"通过":["20.8"],"是":["20.10"],"java":["20.10","20.20"],"对象的一个实例":["20.10"],"它由":["20.10"],"容器管理并配置":["20.10"],"的创建":["20.10"],"初始化":["20.10"],"销毁以及它们之间的关系都由":["20.10"],"容器负责":["20.10"],"这使得我们能够更好地组织和管理代码":["20.10"],"降低各个组件之间的耦合度":["20.10"],"mybatis":["20.12"],"使开发者能够更直观地编写和维护":["20.13"],"语句":["20.13"],"同时":["20.13"],"通过对象关系映射":["20.13"],"orm":["20.13"],"功能将数据库表与":["20.13"],"对象进行关联":["20.13"],"将数据库操作抽象为":["20.13"],"对象的操作":["20.13"],"简化了数据访问层的代码":["20.13"],"的主要概念和用法包括":["20.13"],"映射文件":["20.13"],"映射文件是":["20.13"],"中的核心配置文件":["20.13"],"lombok":["20.14","20.20"],"的库":["20.15"],"旨在通过注解的方式简化":["20.15"],"和":["20.16","20.18"],"方法":["20.16","20.17","20.18"],"添加":["20.17"],"equals":["20.18"],"hashcode":["20.18"],"生成一个无参构造函数":["20.19"],"生成一个包含所有字段的构造函数":["20.19"],"requiredargsconstructor":["20.20"],"的功能":["20.20"],"将":["20.20"],"注解添加到类上":["20.20"],"会在编译时为类生成所有这些方法":["20.20"],"import":["20.20"]},{"0":["7.5"],"1":["7.5","20.5","20.12"],"2":["20.7","20.14"],"gptlist":["1.1"],"wordlist":["1.2"],"imagelist":["1.3"],"frontlist":["2.1"],"springbootlist":["2.2"],"斜体":["6.0"],"向左对齐":["6.1"],"p":["6.1","6.7"],"自动链接":["6.2"],"参考式":["6.4"],"在文档要插入图片的地方写":["6.4"],"分数":["6.5"],"classname":["6.7"],"对特殊字符串的处理通常就要用到":["7.1"],"例如匹配":["7.2"],"apple":["7.2"],"就是代表":["7.3"],"符号":["7.3"],"如果不是":["7.3"],"加上转义字符后就会赋予特殊的含义":["7.3"],"下面列举出常用的":["7.3"],"例如":["7.4","20.6"],"abc":["7.4"],"能同时匹配":["7.4"],"a":["7.4"],"b":["7.4"],"c":["7.4"],"三个字符":["7.4"],"当需要匹配很多字符时":["7.4"],"用区间符号":["7.4"],"次":["7.5"],"或":["7.5"],"比如在字符串的开头或结尾匹配":["7.6"],"为":["7.7"],"boundary":["7.7"],"never":["7.8"],"say":["7.8"],"总结如下":["7.8"],"sitelist":["12.0"],"那就要坚持走完":["14.0"],"不要低估自己的潜力":["14.0"],"很多事情只有想不想做":["14.0"],"没有做不做得到":["14.0"],"插件安装与使用":["19.7"],"service":["19.9"],"chatgpt":["20.0"],"编译器检查":["20.6"],"通过注解":["20.6"],"我们可以告诉编译器在编译过程中对代码进行特定的检查":["20.6"],"从而提高代码质量":["20.6"],"override":["20.6"],"注解表示一个方法是重写了父类的方法":["20.6"],"编译器会检查该方法是否确实重写了父类的方法":["20.6"],"我们实现了表现层与":["20.8"],"之间的解耦":["20.8"],"表现层不引用":["20.8"],"如果开发过程中我们的模型改变了":["20.8"],"更多":["20.10"],"的应用主要体现在以下几个方面":["20.10"],"依赖注入":["20.10"],"dependency":["20.10"],"injection":["20.10"],"容器负责创建和管理":["20.10"],"当一个组件需要使用另一个组件时":["20.10"],"可以自动将所需的":["20.10"],"注入到目标组件中":["20.10"],"它包含了":["20.13"],"语句和结果映射的定义":["20.13"],"映射文件将":["20.13"],"使":["20.13"],"语句的编写和维护变得更加简单":["20.13"],"映射文件中的":["20.13"],"语句可以通过":["20.13"],"xml":["20.13"],"或注解的方式来编写":["20.13"],"会话":["20.13"],"sqlsession":["20.13"],"代码的编写":["20.15"],"它可以自动生成一些通用的":["20.15"],"容易出错的代码":["20.15"],"将这些注解添加到类或字段上":["20.16"],"lombok":["20.16","20.17","20.18"],"会在编译时为相应的属性生成相应的":["20.16"],"注解后":["20.17","20.18"],"会在编译时生成一个包含所有非静态字段的":["20.17"],"添加":["20.18"],"生成一个包含所有使用":["20.19"],"nonnull":["20.19","20.20"],"注解的字段的构造函数":["20.19"],"java":["20.19"],"import":["20.19"],"public":["20.20"],"class":["20.20"],"person":["20.20"]},{"0":["7.4"],"2":["19.5","20.10"],"3":["20.13"],"4":["14.0","20.0"],"9":["7.4"],"12":["14.0"],"columns":["1.1","1.2","1.3","2.1","2.2","12.0"],"align":["6.1"],"left":["6.1"],"url链接":["6.2"],"小明":["6.5"],"lastupdate":["6.7"],"最后更新":["6.7"],"而正则表达式规则繁杂生涩":["7.1"],"不花点时间系统学习很难熟练掌握":["7.1"],"中的":["7.2"],"和对应的正则表达式":["7.3"],"正则表达式":["7.3","7.4","7.8"],"记忆方式":["7.3","7.8"],"能够匹配所有的数字":["7.4"],"为了追求更简洁的表达":["7.4"],"衍生了一批能够同时匹配多个字符的通配符":["7.4"],"匹配区间":["7.4"],"有还是没有":["7.5"],"的首字母":["7.7"],"在正则引擎中匹配的是字符":["7.7"],"w":["7.7"],"边界标志":["7.8"],"单词边界":["7.8"],"b":["7.8"],"tip":["14.0"],"controller":["19.9"],"注解":["20.5"],"如果没有":["20.6"],"编译器会报错":["20.6"],"代码生成":["20.6"],"一些注解可以用于在编译时生成额外的代码":["20.6"],"lombok":["20.6","20.19"],"库中的":["20.6"],"getter":["20.6","20.15"],"和":["20.6"],"而界面没变":["20.8"],"我们就只需要改":["20.8"],"而不需要去改表现层中的东西":["20.8"],"一般我们使用":["20.8"],"类来继承":["20.8"],"这种方式避免了在代码中手动创建和管理对象实例":["20.10"],"提高了代码的可维护性和可测试性":["20.10"],"我们可以使用":["20.10"],"autowired":["20.10"],"注解实现自动注入":["20.10"],"生命周期管理":["20.10"],"容器负责管理":["20.10"],"的整个生命周期":["20.10"],"是":["20.13"],"的主要接口":["20.13"],"它提供了执行":["20.13"],"语句的方法":["20.13"],"是线程不安全的":["20.13"],"因此通常在每个请求或事务中都会创建一个新的":["20.13"],"实例":["20.13"],"可以通过":["20.13"],"sqlsessionfactory":["20.13"],"工厂类来创建":["20.13"],"映射接口":["20.13"],"mapper":["20.13"],"接口":["20.13"],"接口是一个":["20.13"],"如":["20.15"],"setter":["20.15"],"java":["20.16","20.17"],"import":["20.16"],"会在编译时生成基于所有非静态字段的":["20.18"],"private":["20.20"],"string":["20.20"],"name":["20.20"],"int":["20.20"],"age":["20.20"],"要使用":["20.20"]},{"2":["1.1"],"3":["1.2","1.3","2.1","2.2","12.0","20.10"],"4":["20.13"],"2023":["6.7"],"删除线":["6.0"],"向右对齐":["6.1"],"标记":["6.4"],"在文档的最后写上":["6.4"],"男":["6.5"],"01":["6.7"],"以前每次碰到都要去":["7.1"],"csdn":["7.1"],"a":["7.2"],"字符只需用":["7.2"],"换行符":["7.3"],"n":["7.3"],"new":["7.3"],"line":["7.3"],"换页符":["7.3"],"f":["7.3"],"记忆方式":["7.4"],"除换行符外的任意字符":["7.4"],"一点一世界":["7.4"],"单个数字":["7.4"],"d":["7.4"],"digit":["7.4"],"无数次":["7.5"],"只有零次和无数次":["7.5"],"和非字符":["7.7"],"的中间位置":["7.7"],"boundary":["7.8"],"非单词边界":["7.8"],"大写即否定":["7.8"],"字符串开头":["7.8"],"小荷才露尖尖角":["7.8"],"终于把博客部署上来了":["14.0"],"可惜":["14.0"],"gitee":["14.0"],"搞了半天没成功":["14.0"],"mybatisplus":["19.5"],"front":["19.9"],"倾情提供":["20.0"],"提供元数据":["20.5"],"setter":["20.6"],"注解可以自动生成":["20.6"],"方法":["20.6","20.15"],"减少了手动编写这些方法的工作量":["20.6"],"配置信息":["20.6"],"注解可以作为配置信息来使用":["20.6"],"数据传输对象":["20.7"],"entity":["20.8"],"实体类":["20.8"],"在":["20.8"],"类里放一些业务字段":["20.8"],"并提供":["20.8"],"get":["20.8"],"从创建到销毁":["20.10"],"这意味着开发者可以专注于编写业务逻辑":["20.10"],"而不必担心对象的创建和销毁":["20.10"],"此外":["20.10"],"还提供了一些注解":["20.10"],"如":["20.10"],"postconstruct":["20.10"],"和":["20.10"],"predestroy":["20.10"],"可以用于在":["20.10"],"生命周期的特定阶段执行自定义操作":["20.10"],"配置管理":["20.10"],"持久层":["20.12"],"orm":["20.12"],"它定义了与数据库进行交互的方法":["20.13"],"每个方法对应于映射文件中的一个":["20.13"],"通过调用":["20.13"],"接口的方法":["20.13"],"我们可以执行":["20.13"],"语句并获取结果":["20.13"],"接口通常与映射文件关联":["20.13"],"会自动生成":["20.13"],"接口的实现类":["20.13"],"对象关系映射":["20.13"],"自动生成类的各种方法":["20.14"],"构造函数":["20.15"],"equals":["20.15"],"import":["20.17","20.18"],"java":["20.18"],"需要将":["20.20"],"库添加到项目的依赖中":["20.20"],"对于使用":["20.20"],"maven":["20.20"],"或":["20.20"],"gradle":["20.20"],"的项目":["20.20"],"可以在构建文件中添加相应的依赖":["20.20"]},{"4":["20.10"],"16":["6.7"],"75":["6.5"],"00":["6.7"],"查一遍":["7.1"],"form":["7.3"],"feed":["7.3"],"回车符":["7.3"],"r":["7.3"],"return":["7.3"],"除了":["7.4"],"大写即否定":["7.4"],"包括下划线在内的单个字符":["7.4"],"za":["7.4"],"z0":["7.4"],"legend":["7.7"],"never":["7.7"],"字符串结尾":["7.8"],"万事归于钱":["7.8"],"多行模式":["7.8"],"multiple":["7.8"],"那就勉强用":["14.0"],"github":["14.0"],"吧":["14.0"],"为程序提供元数据":["20.6"],"spring":["20.6"],"框架中的":["20.6"],"autowired":["20.6"],"注解可以实现依赖注入":["20.6"],"通过这种方式可以将组件的创建和配置与代码逻辑解耦":["20.6"],"使程序更易于维护":["20.6"],"set":["20.8"],"方法":["20.8"],"当我们在业务逻辑层或者交互层用到一些数据库中不存在的字段时":["20.8"],"比如":["20.8"],"我的项目中":["20.8"],"使用":["20.8"],"通过使用":["20.10","20.15"],"的配置功能":["20.10"],"我们可以将应用程序的配置信息从代码中分离出来":["20.10"],"使代码更加易于维护":["20.10"],"例如":["20.10"],"value":["20.10"],"注解":["20.10"],"我们可以将外部配置文件中的值注入到":["20.10"],"切面编程":["20.10"],"aspect":["20.10"],"框架":["20.12"],"通过将数据库表的列映射到":["20.13"],"对象的属性":["20.13"],"实现了对象关系映射":["20.13"],"这意味着我们可以将数据库操作抽象为":["20.13"],"简化数据访问层的代码":["20.13"],"在映射文件中":["20.13"],"我们可以定义结果映射":["20.13"],"resultmap":["20.13"],"来描述这种映射关系":["20.13"],"的典型用法包括以下步骤":["20.13"],"编写映射文件":["20.13"],"在映射文件中定义":["20.13"],"语句和结果映射":["20.13"],"hashcode":["20.15"],"等":["20.15"],"public":["20.16","20.17","20.18","20.19"],"class":["20.16","20.17","20.18"],"person":["20.17"],"此外":["20.20"],"大多数现代":["20.20"],"ide":["20.20"],"如":["20.20"],"intellij":["20.20"],"idea":["20.20"],"eclipse":["20.20"],"都需要安装相应的":["20.20"]},{"17":["6.7"],"right":["6.1"],"图片地址":["6.4"],"图片title":["6.4"],"这次痛定思痛":["7.1"],"一定要给它拿下了":["7.1"],"就行了":["7.2"],"简单的数字和字母都是如此":["7.2"],"空白符":["7.3"],"s":["7.3"],"space":["7.3"],"制表符":["7.3"],"t":["7.3"],"tab":["7.3"],"w":["7.4"],"通吃单个常用字符":["7.4"],"非单字字符":["7.4"],"匹配空白字符":["7.4"],"包括空格":["7.4"],"起码还有一次":["7.5"],"特定次数":["7.5"],"x":["7.5"],"min":["7.5"],"die":["7.7"],"bnever":["7.7"],"of":["7.8"],"lines":["7.8"],"忽略大小写":["7.8"],"i":["7.8"],"ignore":["7.8"],"年必定是收获的一年":["14.0"],"我相信":["14.0"],"我坚信":["14.0"],"忘掉过去发生的吧":["14.0"],"运行时处理":["20.6"],"有些注解可以在运行时被读取":["20.6"],"从而影响程序的行为":["20.6"],"的反射":["20.6"],"api":["20.6"],"可以读取类":["20.6"],"方法或字段上的注解信息":["20.6"],"对":["20.8"],"offset":["20.8"],"limit":["20.8"],"order":["20.8"],"sort":["20.8"],"search":["20.8"],"这些字段在数据库是没有的":["20.8"],"oriented":["20.10"],"programming":["20.10"],"aop":["20.10"],"支持":["20.10"],"它允许我们在不修改原始代码的情况下向应用程序添加额外功能":["20.10"],"在方法执行前后添加日志记录功能":["20.10"],"这种方式能够让我们更好地对代码进行模块化":["20.10"],"提高代码的可重用性和可维护性":["20.10"],"总之":["20.10","20.20"],"配置":["20.13"],"通过":["20.13"],"或":["20.13"],"配置文件":["20.13"],"的相关设置":["20.13"],"如数据源":["20.13"],"事务管理器等":["20.13"],"创建":["20.13"],"定义与数据库进行交互的":["20.13"],"方法":["20.13"],"获取":["20.13"],"开发者可以减少样板代码的编写":["20.15"],"提高代码的可读性和可维护性":["20.15"],"person":["20.16","20.18","20.19"],"private":["20.16","20.17","20.18","20.19"],"string":["20.16","20.17","20.18","20.19"],"name":["20.16","20.17","20.18"],"class":["20.19"],"插件":["20.20"],"以便正确识别和处理":["20.20"],"注解":["20.20"],"是一个实用的":["20.20"]},{"5":["20.13"],"垂直制表符":["7.3"],"v":["7.3"],"vertical":["7.3"],"制表符":["7.4"],"换页符和换行符":["7.4"],"s":["7.4"],"space":["7.4"],"匹配非空白字符":["7.4"],"max":["7.5"],"括号指定次数":["7.5"],"匹配never":["7.7"],"case":["7.8"],"全局模式":["7.8"],"g":["7.8"],"global":["7.8"],"那些并不值得花时间":["14.0"],"向前看":["14.0"],"专注于提升自己":["14.0"],"然后根据这些信息动态地执行某些操作":["20.6"],"总之":["20.6"],"注解是一种给代码添加额外信息的方式":["20.6"],"这些信息可以被编译器":["20.6"],"框架或其他工具读取和处理":["20.6"],"从而实现对代码的额外控制和管理":["20.6"],"我们就需要在":["20.8"],"类里放这些字段":["20.8"],"这些字段的意义就相当于一些经处理过的数据库字段":["20.8"],"实质意义就是方便数据交互":["20.8"],"提高效率":["20.8"],"中的":["20.10"],"是一个核心概念":["20.10"],"它有助于降低组件之间的耦合度":["20.10"],"简化配置和依赖管理":["20.10"],"以及实现高度模块化的代码结构":["20.10"],"开发者可以更专注于业务逻辑的实现":["20.10"],"提高开发效率":["20.10"],"工厂类创建":["20.13"],"调用":["20.13"],"调用相应的方法执行":["20.13"],"的主要概念和用法包括":["20.15"],"int":["20.16","20.17","20.18","20.19"],"age":["20.16","20.17","20.18","20.19"],"name":["20.19"],"库":["20.20"],"可以帮助开发者减少样板代码的编写":["20.20"],"提高代码的可读性和可维护性":["20.20"],"通过使用":["20.20"],"开发者可以专注于业务逻辑":["20.20"],"而无需花费过多精力编写重复的代码":["20.20"]}]'},a={"1.0":{t:"# All-In-ChatGpt",p:"",l:"base/gpt/chatgpt.html",a:"all-in-chatgpt"},"1.1":{t:"ChatGpt",p:`&lt;CardList :cardList=&quot;gptList&quot; :columns=&quot;2&quot;/&gt;
`,l:"base/gpt/chatgpt.html#chatgpt",a:"chatgpt"},"1.2":{t:"文档",p:`&lt;CardList :cardList=&quot;wordList&quot; :columns=&quot;3&quot;/&gt;
`,l:"base/gpt/chatgpt.html#文档",a:"文档"},"1.3":{t:"图像",p:`&lt;CardList :cardList=&quot;imageList&quot; :columns=&quot;3&quot;/&gt;
`,l:"base/gpt/chatgpt.html#图像",a:"图像"},"2.0":{t:"# 常用导航",p:"",l:"base/guide/index.html",a:"常用导航"},"2.1":{t:"前端",p:`&lt;CardList :cardList=&quot;frontList&quot; :columns=&quot;3&quot;/&gt;
`,l:"base/guide/index.html#前端",a:"前端"},"2.2":{t:"后端",p:`&lt;CardList :cardList=&quot;springBootList&quot; :columns=&quot;3&quot;/&gt;
`,l:"base/guide/index.html#后端",a:"后端"},"2.3":{t:"部署",p:"",l:"base/guide/index.html#部署",a:"部署"},"2.4":{t:"运维",p:"",l:"base/guide/index.html#运维",a:"运维"},"3.0":{t:"# 常用链接",p:"",l:"base/index.html",a:"常用链接"},"4.0":{t:"# Git",p:"",l:"base/tools/git.html",a:"git"},"5.0":{t:"# Linux",p:"",l:"base/tools/linux.html",a:"linux"},"6.0":{t:"斜体和粗体",p:`
粗体： **文字** 斜体： _文字_ 删除线： ~~删除线~~

`,l:"base/tools/markdown.html",a:"斜体和粗体"},"6.1":{t:"文字对齐",p:`居中对齐：&lt;center&gt;Markdown&lt;/center&gt;

向左对齐：&lt;p align=&quot;left&quot;&gt;Markdown&lt;/p&gt;
 ...`,l:"base/tools/markdown.html#文字对齐",a:"文字对齐"},"6.2":{t:"超链接",p:`
行内式：文字超链接文字
自动链接：&lt;url链接&gt;

`,l:"base/tools/markdown.html#超链接",a:"超链接"},"6.3":{t:"引用",p:`
&gt; 引用文字

`,l:"base/tools/markdown.html#引用",a:"引用"},"6.4":{t:"插入图像",p:`
行内式：!图片Alt
参考式：在文档要插入图片的地方写![图片Alt][标记]，在文档的最后写上[标记]:图片地址 &quot;图片Title&quot;

`,l:"base/tools/markdown.html#插入图像",a:"插入图像"},"6.5":{t:"表格",p:`
学号|姓名|分数
-|-|-
小明|男|75

`,l:"base/tools/markdown.html#表格",a:"表格"},"6.6":{t:"分割线",p:`
*** / *****

`,l:"base/tools/markdown.html#分割线",a:"分割线"},"6.7":{t:"代码",p:"\n` 代码 `\n```语言\n代码块\n```\n\n\n&lt;p className='lastUpdate'&gt;最后更新: 2023/01/16 00:17&lt;/p&gt;\n",l:"base/tools/markdown.html#代码",a:"代码"},"7.0":{t:"# 正则表达式",p:"",l:"base/tools/reg.html",a:"正则表达式"},"7.1":{t:"前言",p:`正则表达式在日常开发中的使用频率非常高，熟练掌握正则表达式能够在开发中事半功倍。
就前端而言，对特殊字符串的处理通常就要用到。而正则表达式规则繁杂生涩，不花点时间系统学习很难熟练掌握。
以前每次碰到都 ...`,l:"base/tools/reg.html#前言",a:"前言"},"7.2":{t:"单个字符",p:`对于单个字符，字符和正则表达式一般是一一对应的关系。例如匹配apple中的'a'字符只需用/a/就行了，简单的数字和字母都是如此。
`,l:"base/tools/reg.html#单个字符",a:"单个字符"},"7.3":{t:"转义字符",p:`当单个简单字符无法表达需要的意思时，就要用到转义字符\\，加在其前面，使其意思发生变化。
若为特殊字符，在其前面加上转义字符\\后，代表字符其本身，失去特殊含义(\\*就是代表*符号)。
如果不是特殊字符， ...`,l:"base/tools/reg.html#转义字符",a:"转义字符"},"7.4":{t:"多个字符",p:`单个字符的一对一匹配显然是不够的，为了实现一对多的多字符匹配，引入了集合区间和通配符的概念。
正则表达式中用中括号[]来表示集合的概念，在集合中又有列举和区间两种表达方式。
当需要匹配的字符不多时，可 ...`,l:"base/tools/reg.html#多个字符",a:"多个字符"},"7.5":{t:"循环与重复",p:`上述一对一和一对多的场景都是针对单个字符结果的，若要匹配多个字符组成的结果，就要用到重复与循环的方法。正则表达式中用若干元字符来表示不同的循环方式：



匹配规则
元字符
记忆方式




0 次  ...`,l:"base/tools/reg.html#循环与重复",a:"循环与重复"},"7.6":{t:"位置与边界",p:`在长文本字符串的处理中，我们经常要限制匹配的位置与边界，比如在字符串的开头或结尾匹配。
`,l:"base/tools/reg.html#位置与边界",a:"位置与边界"},"7.7":{t:"单词边界",p:`在英语句子中匹配某个单词时，需要用到单词边界通配符\\b，其中b为boundary的首字母，在正则引擎中匹配的是字符(\\w)和非字符(\\W)的中间位置。
Legend never die.  /\\bne ...`,l:"base/tools/reg.html#单词边界",a:"单词边界"},"7.8":{t:"字符串边界",p:`元字符^用来匹配字符串的开头。而元字符$用来匹配字符串的末尾。
在长文本中，如果要排除换行符的干扰，则要开启多行模式，在正则表示式结尾添加m，例如：/^never say never$/m。
总结如下 ...`,l:"base/tools/reg.html#字符串边界",a:"字符串边界"},"7.9":{t:"应用与方法",p:"",l:"base/tools/reg.html#应用与方法",a:"应用与方法"},"8.0":{t:"# Docker",p:"",l:"deploy/docker.html",a:"docker"},"9.0":{t:"# 常用链接",p:"",l:"deploy/index.html",a:"常用链接"},"10.0":{t:"# Nginx",p:"",l:"deploy/nginx.html",a:"nginx"},"11.0":{t:"# 常用链接",p:"",l:"front/index.html",a:"常用链接"},"12.0":{t:"# 前端资源导航",p:`&lt;CardList :cardList=&quot;siteList&quot; :columns=&quot;3&quot; /&gt;
`,l:"front/resource.html",a:"前端资源导航"},"14.0":{t:"::: info 2023/1/14",p:`2023 年，要做一个做事有条理有计划、头脑时刻保持清醒的技术人。
既然选择了技术这条路，那就要坚持走完。
不要低估自己的潜力，很多事情只有想不想做，没有做不做得到。
:::
::: tip 2023 ...`,l:"life/alarm.html",a:"info-2023-1-14"},"15.0":{t:"# 头像",p:"",l:"life/avatar.html",a:"头像"},"17.0":{t:"# 语录",p:"",l:"life/sentence.html",a:"语录"},"18.0":{t:"# 常用链接",p:`123
`,l:"server/index.html",a:"常用链接"},"19.0":{t:"# java",p:"",l:"server/java/index.html",a:"java"},"19.1":{t:"关键技术",p:`


`,l:"server/java/index.html#关键技术",a:"关键技术"},"19.2":{t:" ",p:"",l:"server/java/index.html#",a:""},"19.3":{t:"Springboot",p:`


`,l:"server/java/index.html#springboot",a:"springboot"},"19.4":{t:" ",p:"",l:"server/java/index.html#",a:""},"19.5":{t:"Mybatis",p:`

Mybatis 教程 1


Mybatis 教程 2


MybatisPlus 教程 1


MybatisPlus 教程 2



`,l:"server/java/index.html#mybatis",a:"mybatis"},"19.6":{t:" ",p:"",l:"server/java/index.html#",a:""},"19.7":{t:"Lombok：自动生成类的各种方法",p:`
Lombok 插件安装与使用

`,l:"server/java/index.html#lombok-自动生成类的各种方法",a:"lombok-自动生成类的各种方法"},"19.8":{t:"框架思路",p:"",l:"server/java/index.html#框架思路",a:"框架思路"},"19.9":{t:"Database -> Model -> Dao -> Service -> Controller -> Front",p:"",l:"server/java/index.html#database-model-dao-service-controller-front",a:"database-model-dao-service-controller-front"},"19.10":{t:"Swagger",p:"",l:"server/java/index.html#swagger",a:"swagger"},"19.11":{t:"Bean",p:"",l:"server/java/index.html#bean",a:"bean"},"19.12":{t:"AOP 切面",p:"",l:"server/java/index.html#aop-切面",a:"aop-切面"},"20.0":{t:"# 基础扫盲",p:`特别鸣谢：本部分内容由 chatgpt-4 倾情提供
`,l:"server/java/point.html",a:"基础扫盲"},"20.1":{t:"注解 ｜ DTO",p:`
`,l:"server/java/point.html#注解-dto",a:"注解-dto"},"20.2":{t:"Bean",p:`
`,l:"server/java/point.html#bean",a:"bean"},"20.3":{t:"Mybatis ｜ Lombok",p:"",l:"server/java/point.html#mybatis-lombok",a:"mybatis-lombok"},"20.4":{t:"一、基础名词",p:"",l:"server/java/point.html#一、基础名词",a:"一、基础名词"},"20.5":{t:'<span id="annotation">1. 注解：提供元数据</span>',p:`
`,l:"server/java/point.html#span-id-annotation-1-注解-提供元数据-span",a:"span-id-annotation-1-注解-提供元数据-span"},"20.6":{t:"常见注解 1 ｜ 常见注解 2",p:`
Java 注解（Annotation）是一种特殊的语法结构，它用于为 Java 代码提供额外的元数据信息。注解不会直接影响程序的执行，但它可以被其他工具、框架或编译器读取并执行特定操作。换句话说，注 ...`,l:"server/java/point.html#常见注解-1-常见注解-2",a:"常见注解-1-常见注解-2"},"20.7":{t:'<span id="dto">2. DTO：数据传输对象</span>',p:`
`,l:"server/java/point.html#span-id-dto-2-dto-数据传输对象-span",a:"span-id-dto-2-dto-数据传输对象-span"},"20.8":{t:"详细教程",p:`
简单来说 Model 面向业务，我们是通过业务来定义 Model 的。而 DTO 是面向界面 UI，是通过 UI 的需求来定义的。


通过 DTO 我们实现了表现层与 Model 之间的解耦，表现 ...`,l:"server/java/point.html#详细教程",a:"详细教程"},"20.9":{t:"二、Springboot",p:"",l:"server/java/point.html#二、springboot",a:"二、springboot"},"20.10":{t:'<span id="Bean">1. Bean</span>',p:`
在 Spring Boot 中，Bean（即 Bean 类）是一个重要的概念。Bean 是 Java 对象的一个实例，它由 Spring 容器管理并配置。Bean 的创建、初始化、销毁以及它们之间的 ...`,l:"server/java/point.html#span-id-bean-1-bean-span",a:"span-id-bean-1-bean-span"},"20.11":{t:"三、常用框架",p:"",l:"server/java/point.html#三、常用框架",a:"三、常用框架"},"20.12":{t:'<span id="Mybatis">1. Mybatis：持久层 ORM 框架</span>',p:`
`,l:"server/java/point.html#span-id-mybatis-1-mybatis-持久层-orm-框架-span",a:"span-id-mybatis-1-mybatis-持久层-orm-框架-span"},"20.13":{t:"教程 1 ｜ 教程 2 ｜ plus 教程 1 ｜ plus 教程 2",p:`
MyBatis 是一个用于 Java 平台的持久层框架，它提供了一种简洁易用的方式来处理关系型数据库的数据操作。MyBatis 可以将 SQL 语句与 Java 代码分离，使开发者能够更直观地编写和 ...`,l:"server/java/point.html#教程-1-教程-2-plus-教程-1-plus-教程-2",a:"教程-1-教程-2-plus-教程-1-plus-教程-2"},"20.14":{t:'<span id="Lombok">2. Lombok：自动生成类的各种方法</span>',p:`
`,l:"server/java/point.html#span-id-lombok-2-lombok-自动生成类的各种方法-span",a:"span-id-lombok-2-lombok-自动生成类的各种方法-span"},"20.15":{t:"插件安装与使用",p:`
Lombok 是一个用于 Java 的库，旨在通过注解的方式简化 Java 代码的编写。它可以自动生成一些通用的、容易出错的代码，如 getter、setter 方法、构造函数、equals()、h ...`,l:"server/java/point.html#插件安装与使用",a:"插件安装与使用"},"20.16":{t:"1. @Getter/@Setter",p:`
这两个注解用于自动生成 getter 和 setter 方法。将这些注解添加到类或字段上，Lombok 会在编译时为相应的属性生成相应的 getter 和 setter 方法。

import lo ...`,l:"server/java/point.html#_1-getter-setter",a:"_1-getter-setter"},"20.17":{t:"2. @ToString",p:`
此注解用于自动生成 toString() 方法。添加 @ToString 注解后，Lombok 会在编译时生成一个包含所有非静态字段的 toString() 方法。

import lombok.T ...`,l:"server/java/point.html#_2-tostring",a:"_2-tostring"},"20.18":{t:"3. @EqualsAndHashCode",p:`
此注解用于自动生成 equals() 和 hashCode() 方法。添加 @EqualsAndHashCode 注解后，Lombok 会在编译时生成基于所有非静态字段的 equals() 和 ha ...`,l:"server/java/point.html#_3-equalsandhashcode",a:"_3-equalsandhashcode"},"20.19":{t:"4. @NoArgsConstructor/@AllArgsConstructor/@RequiredArgsConstructor",p:`
这三个注解用于自动生成构造函数。@NoArgsConstructor 生成一个无参构造函数；@AllArgsConstructor 生成一个包含所有字段的构造函数；@RequiredArgsCons ...`,l:"server/java/point.html#_4-noargsconstructor-allargsconstructor-requiredargsconstructor",a:"_4-noargsconstructor-allargsconstructor-requiredargsconstructor"},"20.20":{t:"5. @Data",p:`
这个注解是一个综合注解，包括了 @Getter、@Setter、@ToString、@EqualsAndHashCode 和 @RequiredArgsConstructor 的功能。将 @Data ...`,l:"server/java/point.html#_5-data",a:"_5-data"}},n={previewLength:100,buttonLabel:"搜索",placeholder:"情输入关键词",allow:[],ignore:[]},e={INDEX_DATA:t,PREVIEW_LOOKUP:a,Options:n};export{e as default};
